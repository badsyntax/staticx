#!/usr/bin/env node

/*
 * staticx
 * https://github.com/badsyntax/staticx
 *
 * Copyright (c) 2013 Richard Willis
 * Licensed under the MIT license.
 */

'use strict';

var staticx = require('../lib/staticx');
var program = require('commander');
var pkg = require('../package');
var colors = require('colors');
var path = require('path');
var prompt = require('prompt');
var fs = require('fs');

function exit(code, message) {
  // Show a colorized log message.
  console.log(String(message)[[
    'info',
    'error'
  ][code]]);
  process.exit(code);
}

function createAction(options) {

  if (!options.destination || !fs.existsSync(options.destination)) {
    exit(1, 'Destination path required or invalid.');
  }

  var start = new Date();

  staticx.create({
    dest: options.destination,
    posts: options.posts,
    clean: options.clean
  }, function(err) {
    if (err) {
      exit(1, err);
    }
    var msg = 'Successfully created a new site at: ' + path.resolve(options.destination);
    msg += ('\nCompleted in ' + (new Date() - start) + 'ms').data;
    exit(0, msg);
  });
}

function createCommand(options){

  if (options.interactive) {

    prompt.message = 'Create';
    prompt.start();
    prompt.get([{
      name: 'destination',
      description: 'Destination path',
      type: 'string',
      required: true,
      message: 'Path does not exist',
      conform: function(value) {
        return fs.existsSync(value);
      }
    }, {
      name: 'posts',
      description: 'Number of posts',
      type: 'string',
      pattern: /^\w+$/,
      default: '0',
      required: true
    }, {
      name: 'clean',
      description: 'Clean the directory first? (y/n)',
      type: 'string',
      pattern: /^[yn]$/i,
      message: 'Please enter either \'y\' or \'n\'',
      default: 'n',
      required: true,
      before: function(value) {
        return value.toLowerCase() === 'y';
      }
    }], function (err, result) {
      if (err) {
        exit(1, err);
      }
      createAction(result);
    });
    return;
  }

  createAction(options);
};

colors.setTheme({
  error: 'red',
  info: 'green',
  data: 'grey'
});

program
  .version(pkg.version);

program
  .command('create')
  .description('create a new site')
  .option('-d, --destination <destination>', 'destination path')
  .option('-p, --posts <posts>', 'number of dummy blog posts to generate', parseInt)
  .option('-c, --clean', 'clean the destination folder before creating')
  .option('-i, --interactive', 'use prompts to set the options')
  .action(createCommand);

program.parse(process.argv);
